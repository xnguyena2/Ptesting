package com.example.heroku;

import com.example.heroku.model.repository.BeerRepository;
import com.example.heroku.model.repository.ImageRepository;
import com.example.heroku.services.ClientDevice;
import com.example.heroku.services.DeviceConfig;
import com.fasterxml.jackson.core.JsonProcessingException;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.TestPropertySource;
import org.springframework.test.context.junit4.SpringRunner;

@RunWith(SpringRunner.class)
@SpringBootTest
@TestPropertySource(properties = {
        "JDBC_DATABASE_URL=r2dbc:postgresql://ec2-52-203-165-126.compute-1.amazonaws.com:5432/dab63e0a6snl77",
        "POSTGRESQL_PORT=5432",
        "POSTGRESQL_DB=dab63e0a6snl77",
        "POSTGRESQL_HOST=ec2-52-203-165-126.compute-1.amazonaws.com",
        "USER_NAME=pnkrlyomnugskb",
        "PASSWORD=4b16a191f30c89f36908193809d12d3a8d4c3ffb73277357e1b0e0515169cea2",
        "POSTGRESQL_POOLSIZE=1",
        "POSTGRESQL_TIMEIDLE=10000",
        "HTTPONLY_SECURE=false"})
public class ApplicationTest {
    String imageContent = "";


    @Autowired
    ImageRepository imageRepository;

    @Autowired
    private BeerRepository beerRepository;

    @Autowired
    com.example.heroku.services.Beer beerAPI;

    @Autowired
    com.example.heroku.services.Image imageAPI;

    @Autowired
    DeviceConfig deviceConfig;

    @Autowired
    ClientDevice clientDevice;

    @Test
    public void BeerTest() {
        BeerTest.builder().beerAPI(beerAPI).beerRepository(beerRepository).build().saveBeerTest();
    }

    @Test
    public void ImageTest() {
        ImageTest.builder().imageContent(this.imageContent).imageAPI(imageAPI).imageRepository(imageRepository).build().ImageTest();
        DeviceConfigTest.builder().deviceConfig(this.deviceConfig).clientDevice(this.clientDevice).build().DeviceConfigTest();
    }

    @Test
    public void DeviceConfigTest() {
    }

    @Test
    public void testCurrentUser() {

    }

    @Test
    public void testParsing() throws JsonProcessingException {
        ObjectPraserTest.builder().build().BeerSubmitDataTest();
    }
}
